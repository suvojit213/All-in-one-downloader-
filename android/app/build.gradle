// Apply the necessary plugins for an Android application and Flutter.
// THIS IS THE NEW, DECLARATIVE WAY that your Flutter version requires.
plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dev.flutter.flutter-gradle-plugin"
}

// Reads the local properties file.
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

// Gets the Flutter version code and name.
def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    // The namespace is required for Android Gradle Plugin 7.3+.
    namespace "com.example.all_in_one_downloader"
    
    // Updated SDK versions for better compatibility with modern Android.
    compileSdkVersion 34
    ndkVersion "25.1.8937393"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // Defines the application ID and version info.
        applicationId "com.example.all_in_one_downloader"
        minSdkVersion 21
        targetSdkVersion 34 // Updated target SDK
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Using the debug signing config for now.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    // Tells the Gradle plugin where to find the Flutter project.
    source '../..'
}

dependencies {
    // Flutter manages its own dependencies via pubspec.yaml.
    // You can add native Android dependencies here if needed.
}