import org.gradle.api.initialization.resolve.RepositoriesMode

// Rule #1: This block MUST be at the very top. No code before it.
pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

// Rule #2: The plugins block can come after pluginManagement.
plugins {
    // We leave this empty because the script below will handle everything.
}

// Now, after the strict blocks, we can do our logic.
def flutterRoot = System.getenv('FLUTTER_ROOT')
if (flutterRoot == null) {
    def localProperties = new Properties()
    def localPropertiesFile = new File(rootProject.projectDir, "local.properties")
    if (localPropertiesFile.exists()) {
        localPropertiesFile.withReader("UTF-8") { reader ->
            localProperties.load(reader)
        }
        flutterRoot = localProperties.getProperty("flutter.sdk")
    }
}

if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file or with a FLUTTER_ROOT environment variable.")
}

include ':app'
apply from: new File(flutterRoot, 'packages/flutter_tools/gradle/app_plugin_loader.gradle')